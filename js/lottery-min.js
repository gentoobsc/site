"use strict";const Web3Modal=window.Web3Modal.default,WalletConnectProvider=window.WalletConnectProvider.default,Fortmatic=window.Fortmatic,evmChains=window.evmChains;let web3Modal,provider,selectedAccount;function init(){if(console.log("Initializing example"),console.log("WalletConnectProvider is",WalletConnectProvider),console.log("Fortmatic is",Fortmatic),console.log("window.web3 is",window.web3,"window.ethereum is",window.ethereum),"https:"!==location.protocol){return document.querySelector("#alert-error-https").style.display="block",void document.querySelector("#btn-connect").setAttribute("disabled","disabled")}web3Modal=new Web3Modal({cacheProvider:!1,providerOptions:{walletconnect:{package:WalletConnectProvider,options:{infuraId:"8043bb2cf99347b1bfadfb233c5325c0"}},fortmatic:{package:Fortmatic,options:{key:"pk_test_391E26A3B43A3350"}}},disableInjectedProvider:!1}),console.log("Web3Modal instance is",web3Modal)}async function fetchAccountData(){const e=new Web3(provider);console.log("Web3 instance is",e);const t=await e.eth.getChainId(),n=evmChains.getChain(t);if(1!==n.networkId)return $("body").loading({theme:"dark",message:"WARNING: <br><br> Please connect to the Ethereum Mainnet!"}),void onDisconnect();$("body").loading("destroy"),document.querySelector(".network-name").textContent=n.name;const a=await e.eth.getAccounts(),i=n.networkId;console.log("Got accounts",a),console.log(i),selectedAccount=a[0],document.querySelector("#btn-connect").style.display="none",document.querySelector("#btn-disconnect").style.display="block";const o=a.map((async t=>{const n=await e.eth.getBalance(t),i=e.utils.fromWei(n,"ether"),o=parseFloat(i).toFixed(4),s=await e.eth.getBalance("0xa9e8b9Fffb6f96CD9f7FfdB22F819D0497Ab0256"),u=e.utils.fromWei(s,"ether"),l=parseFloat(u).toFixed(4);document.querySelector(".address").textContent=t,document.querySelector(".ethbalance").textContent=o,document.querySelector(".jackpotamount").textContent=l,$("#helpinfo").show();var p=Cookies.get(a[0]+"0xb7b3cd5f5d5c9b7f04a2e78eb89f836547e7d252");console.log("Cookie: "+p),"1"==p?(document.querySelector("#btn-approve").style.display="none",document.querySelector("#btn-play").style.display="block",console.log("Approve hidden: "+p)):(document.querySelector("#btn-approve").style.display="block",document.querySelector("#btn-play").style.display="none")}));await Promise.all(o),document.querySelector(".notconnected").style.display="none",document.querySelector(".whenconnected").style.display="block";const s="0xb7b3cd5f5d5c9b7f04a2e78eb89f836547e7d252",u="0xa9e8b9Fffb6f96CD9f7FfdB22F819D0497Ab0256",l=new e.eth.Contract([{inputs:[{internalType:"address payable",name:"DevWalletAddress",type:"address"},{internalType:"address payable",name:"marketingWalletAddress",type:"address"},{internalType:"address payable",name:"LotteryWalletAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"minTokensBeforeSwap",type:"uint256"}],name:"MinTokensBeforeSwapUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"SwapEnabledUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"bool",name:"_tradingEnabled",type:"bool"}],name:"LetTradingBegin",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_key",type:"address"}],name:"NextSellTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_DevWalletAddress",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_LotteryAddress",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_MaxSellPercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_PercentOfMaxTx",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_SellTimeDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_getETHBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_marketingWalletAddress",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"_maxTxAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"devFee",type:"uint256"}],name:"_setDevFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"DevWalletAddress",type:"address"}],name:"_setDevWallet",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"LotteryWalletAddress",type:"address"}],name:"_setLotteryWallet",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address payable",name:"MarketingWalletAddress",type:"address"}],name:"_setMarketingWallet",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"NumTokens",type:"uint256"}],name:"_setNumFeeTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"taxFee",type:"uint256"}],name:"_setTaxFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"addBotToBlackList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"}],name:"deliver",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"excludeAccount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"geUnlockTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"part",type:"uint256"},{internalType:"uint256",name:"whole",type:"uint256"}],name:"getSwapPercent",outputs:[{internalType:"uint256",name:"percent",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"includeAccount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isBlackListed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcluded",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"isExcludedFromFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"time",type:"uint256"}],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"manualSend",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"manualSwap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tAmount",type:"uint256"},{internalType:"bool",name:"deductTransferFee",type:"bool"}],name:"reflectionFromToken",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"removeBotFromBlackList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"bool",name:"excluded",type:"bool"}],name:"setExcludeFromFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"maxSellPercent",type:"uint256"}],name:"setMaxSellPercent",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"maxTxPercent",type:"uint256"}],name:"setMaxTxPercent",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"PercentOfMaxTx",type:"uint256"}],name:"setPercentOfMaxTx",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"SellTimeDelay",type:"uint256"}],name:"setSellTimeDelay",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"enabled",type:"bool"}],name:"setSwapEnabled",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"swapEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"timestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"rAmount",type:"uint256"}],name:"tokenFromReflection",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tradingEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"uniswapV2Pair",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"uniswapV2Router",outputs:[{internalType:"contract IUniswapV2Router02",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],s),p=new e.eth.Contract([{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_Guess",type:"uint256"}],name:"ShowGuess",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"_HasWon",type:"bool"}],name:"ShowHasWon",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_Rand",type:"uint256"}],name:"ShowRand",type:"event"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"addBotToBlackList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"time",type:"uint256"}],name:"lock",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"guess",type:"uint256"}],name:"PlayLotto",outputs:[{internalType:"bool",name:"",type:"bool"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"removeBotFromBlackList",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_TokenAddress",type:"address"}],name:"setTokenAdress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setTokenAmount",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"},{inputs:[],name:"unlock",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdrawTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_tokenAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"bethAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"geUnlockTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"LastWinner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rand",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"TotalWon",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"WinAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"Winners",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"WinTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}],u);var y=0,r=0,d=0;if(y=await l.methods.balanceOf(a[0]).call(),d=await p.methods.tokenAmount().call(),r=(r=y.toString()).slice(0,-9),r=parseInt(r).toLocaleString(),m=(m=d.toString()).slice(0,-9),m=parseInt(m).toLocaleString(),parseInt(d)>parseInt(y))console.log("Cant afford ticket"),document.querySelector("#btn-approve").style.display="none",document.querySelector("#btn-play").style.display="none",document.querySelector("#buy-musk").style.display="block",$("#btn-buy").attr("href","https://app.uniswap.org/#/swap?inputCurrency="+s+"&use=V2");else{document.querySelector("#buy-musk").style.display="none";var c=Cookies.get(a[0]+s);"1"==c?(document.querySelector("#btn-approve").style.display="none",document.querySelector("#btn-play").style.display="block",console.log("Approve hidden: "+c)):(document.querySelector("#btn-approve").style.display="block",document.querySelector("#btn-play").style.display="none")}if("NaN"==m){var m="Zero";console.log("UserFriendlyTicketCost:"+m)}if("NaN"==r){r="Zero";console.log("TokensWallet isnan:"+r)}console.log("UserBalance:"+y),console.log("TokensWallet:"+d),document.querySelector(".muskbalance").textContent=r,document.querySelector(".muskcost").textContent=m,document.querySelector("#mrticketcost").textContent=m,document.querySelector("#btn-approve").addEventListener("click",(async function(){$("body").loading({message:"Sending transaction..."}),await l.methods.approve(u,"115792089237316195423570985008687907853269984665640564039457584007913129639935").send({from:a[0]}).on("transactionHash",(function(e){console.log(e),$("body").loading({message:"TX Hash: <br> "+e+"<br> Awaiting confirmation..."})})).on("receipt",(function(e){console.log(e.hash)})).on("confirmation",(function(e,t){console.log("confirmed"),console.log(t),$("body").loading("destroy"),Cookies.set(a[0]+s,"1",{expires:365}),document.querySelector("#btn-approve").style.display="none",document.querySelector("#btn-play").style.display="block"})).on("error",(function(e){$("body").loading("destroy"),document.getElementById("myRange").disabled=!1}))})),document.querySelector("#btn-play").addEventListener("click",(async function(){document.getElementById("myRange").disabled=!0,$("body").loading({message:"Sending transaction..."});var e=document.querySelector("#myRange").value,t="no";await p.methods.PlayLotto(d,e).send({from:a[0]}).on("transactionHash",(function(e){console.log(e),$("body").loading({message:"TX Hash: <br> "+e+"<br> Awaiting confirmation..."})})).on("receipt",(function(e){console.log(e),(async()=>{if(console.log("before start"),e=(e=(y=await l.methods.balanceOf(a[0]).call()).toString()).slice(0,-9),"NaN"==(e=parseInt(e).toLocaleString())){var e="Zero";console.log("TokensWallet isnan:"+e)}console.log("UserBalance:"+y),console.log("TokensWallet:"+d),document.querySelector(".muskbalance").textContent=e,console.log("after start")})(),$("body").loading({message:"About to spin..."});var n=e;console.log("JSON: "+n);var i=function e(t,n){return(t=t.toString()).length<n?e("0"+t,n):t}(e.events.ShowRand.returnValues._Rand,3),o=String(i).split("").map((e=>Number(e)));if(console.log("Spun first: "+t),"no"==t){console.log("about to spin"),console.log("end num: "+o[0]+o[1]+o[2]);var s=String(o[0]+1),u=String(o[1]+1),p=String(o[2]+1);$("body").loading("destroy"),$("#slots1 ul").playSpin({endNum:[s,u,p],stopSeq:"leftToRight",easing:"easeOutBack"}),t="yes"}console.log("Hash: "+e.blockHash),console.log("Rand: "+i),console.log("Number 1: "+o[0]),console.log("Number 1: "+o[0]),console.log("Spun: "+t),document.getElementById("myRange").disabled=!1})).on("confirmation",(function(e,t){console.log("confirmed")})).on("error",(function(e){$("body").loading("destroy"),document.getElementById("myRange").disabled=!1}))}))}async function refreshAccountData(){document.querySelector(".whenconnected").style.display="none",document.querySelector(".notconnected").style.display="block",document.querySelector("#btn-connect").setAttribute("disabled","disabled"),await fetchAccountData(provider),document.querySelector("#btn-connect").removeAttribute("disabled")}async function onConnect(){console.log("Opening a dialog",web3Modal);try{provider=await web3Modal.connect()}catch(e){return void console.log("Could not get a wallet connection",e)}provider.on("accountsChanged",(e=>{fetchAccountData()})),provider.on("chainChanged",(e=>{fetchAccountData()})),provider.on("networkChanged",(e=>{fetchAccountData()})),document.querySelector(".notconnected").style.display="none",await refreshAccountData()}async function onDisconnect(){console.log("Killing the wallet connection",provider),provider.close&&(await provider.close(),await web3Modal.clearCachedProvider(),provider=null),selectedAccount=null,document.querySelector("#btn-disconnect").style.display="none",document.querySelector("#btn-connect").style.display="block",document.querySelector(".notconnected").style.display="block",document.querySelector(".whenconnected").style.display="none"}window.addEventListener("load",(async()=>{init(),document.querySelector("#btn-connect").addEventListener("click",onConnect),document.querySelector("#btn-disconnect").addEventListener("click",onDisconnect)}));